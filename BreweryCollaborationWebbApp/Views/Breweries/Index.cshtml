@model BreweryCollaborationWebbApp.ViewModels.BreweriesIndexViewModel

@{
    ViewData["Title"] = "Index";
}

<h2>Breweries</h2>
<style>
    /* Set the size of the div element that contains the map */
    #map {
        height: 400px; /* The height is 400 pixels */
        width: 100%; /* The width is the width of the web page */
    }
</style>

<div class="row">
    <div id="map"></div>
    <script>

        var breweries = @Html.Raw(Json.Serialize(Model.Breweries));

        // Initialize and add the map
        function initMap() {

            var milwaukee = { lat: 43.038, lng: -87.906 };
            var map = new google.maps.Map(
                document.getElementById('map'), { zoom: 10, center: milwaukee });

            //find logged in brewery and set it to loggedInBrewery
            var loggedInBrewery = FindLoggedInBrewery();

            //loop through all breweries sent to view and make pin for those where collaboration bool is true
            for (var i = 0; i < breweries.length; i++) {


                var numberOfSharedFollowers = 0;
                var fansWhoLikeAles = 0;
                var fansWhoLikeLagers = 0;
                var fansWhoLikeIPAs = 0;
                var fansWhoLikeStouts = 0;
                var fansWhoLikePaleAles = 0;
                var fansWhoLikeWheatBeers = 0;
                var fansWhoLikePilsners = 0;
                var fansWhoLikePorters = 0;
                var fansWhoLikeSours = 0;
                var fansWhoLikeSaisons = 0;

                //Check collaboration bool
                if (breweries[i].collaboration == true && breweries[i].id != loggedInBrewery.id) {
                    var marker = new google.maps.Marker({
                        position: { lat: breweries[i].latitude, lng: breweries[i].longitude },
                        map: map
                    });



                    var loggedInBreweryFollowers = loggedInBrewery.followers;
                    var pinnedBreweryFollowers = breweries[i].followers;

                    //find number of shared followers
                    for (var j = 0; j < loggedInBreweryFollowers.length; j++) {
                        for (var k = 0; k < pinnedBreweryFollowers.length; k++) {

                            if (loggedInBreweryFollowers[j].id == pinnedBreweryFollowers[k].id) {
                                numberOfSharedFollowers++;
                            }
                        }
                    }


                    //Find tastes of pinned brewery's fans
                    for (var l = 0; l < pinnedBreweryFollowers.length; l++) {

                        console.log("pinnedBreweryFollowers[i]", pinnedBreweryFollowers[i])

                        if (pinnedBreweryFollowers[l].likesAle == true) {
                            fansWhoLikeAles++
                        }
                        if (pinnedBreweryFollowers[l].likesLager == true) {
                            fansWhoLikeLagers++
                        }
                        if (pinnedBreweryFollowers[l].likesIPA == true) {
                            fansWhoLikeIPAs++
                        }
                        if (pinnedBreweryFollowers[l].likesStout == true) {
                            fansWhoLikeStouts++
                        }
                        if (pinnedBreweryFollowers[l].likesPaleAle == true) {
                            fansWhoLikePaleAles++
                        }
                        if (pinnedBreweryFollowers[l].likesWheatBeer == true) {
                            fansWhoLikeWheatBeers++
                        }
                        if (pinnedBreweryFollowers[l].likesPilsner == true) {
                            fansWhoLikePilsners++
                        }
                        if (pinnedBreweryFollowers[l].likesPorter == true) {
                            fansWhoLikePorters++
                        }
                        if (pinnedBreweryFollowers[l].likesSour == true) {
                            fansWhoLikeSours++
                        }
                        if (pinnedBreweryFollowers[l].likesSaison == true) {
                            fansWhoLikeSaisons++
                        }
                    }

                    console.log("Shared followers", numberOfSharedFollowers)

                    var infowindow = new google.maps.InfoWindow({

                        content: (breweries[i].name + "<br>" +
                            " Shared followers: " + numberOfSharedFollowers + "<br>" +
                            " Fan style preferences: " + "<br>" +
                            fansWhoLikeAles + " like ales, " + "<br>" +
                            fansWhoLikeLagers + " like lagers, " + "<br>" +
                            fansWhoLikeIPAs + " like IPAs, " + "<br>" +
                            fansWhoLikeStouts + " like stouts, " + "<br>" +
                            fansWhoLikePaleAles + " like pale ales, " + "<br>" +
                            fansWhoLikeWheatBeers + " like wheat beers, " + "<br>" +
                            fansWhoLikePilsners + " like pilsners, " + "<br>" +
                            fansWhoLikePorters + " like porters, " + "<br>" +
                            fansWhoLikeSours + " like sours and " + "<br>" +
                            fansWhoLikeSaisons + " like saisons.")

                    });
                    infowindow.open(map, marker);
                    console.log("Breweries[i]", breweries[i]);
                };
            };

        };

        function FindLoggedInBrewery() {
            var loggedInBrewery;
            for (var i = 0; i < breweries.length; i++) {
                if (breweries[i].id == breweries[i].loggedInBreweryId) {
                    loggedInBrewery = breweries[i];
                }
            }
            return loggedInBrewery
        }



    </script>

    <script src=@($"https://maps.googleapis.com/maps/api/js?key={@ViewBag.GoogleMapsAPIKey}&callback=initMap")
            async defer></script>

</div>

<br />

<H4>Registered breweries</H4>
<table class="table">
    <thead>
        <tr>
            <th>
                Name
            </th>
            <th>
                Address
            </th>
            <th>
                City
            </th>
            <th>
                State
            </th>
            <th>
                Zipcode
            </th>
            <th>
                Website
            </th>
            <th>
                Collaborator
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Breweries)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Address)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.City)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.State)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Zipcode)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Website)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Collaboration)
                </td>
                <td>
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-controller="Follows" asp-action="Follow" asp-route-id="@item.Id">Follow</a> |
                    <a asp-controller="CollaborationRequests" asp-action="SendCollaborationRequest" asp-route-id="@item.Id">Collaboration Request</a>
                </td>
            </tr>
        }
    </tbody>
</table>


<br />
<h4>Matches</h4>

<table class="table">
    <thead>
        <tr>
            <th>
                Name
            </th>
            <th>
                Address
            </th>
            <th>
                City
            </th>
            <th>
                State
            </th>
            <th>
                Zipcode
            </th>
            <th>
                Website
            </th>
            <th>
                Collaboration
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.BreweryMatches)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Address)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.City)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.State)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Zipcode)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Website)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Collaboration)
                </td>
                <td>
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-controller="Follows" asp-action="Follow" asp-route-id="@item.Id">Follow</a> |
                    <a asp-controller="CollaborationRequests" asp-action="SendCollaborationRequest" asp-route-id="@item.Id">Collaboration Request</a>
                </td>
            </tr>
        }
    </tbody>
</table>